print("=== PROGRAMA: JERARQUÍA DE PRODUCTOS ===\n")

# Clase base Producto
class Producto:
    def __init__(self, nombre, precio, stock):
        # Inicializar atributos básicos
        # Escribe aquí tu código
        self.nombre = nombre
        self.precio = precio
        self.stock = stock
        
        
        
    
    def mostrar_info(self):
        # Devolver información básica del producto
        # Escribe aquí tu código
        mensaje = "disponible" if self.stock else "no disponible"
        return f"{self.nombre} cuyo precio es {self.precio} está {mensaje}."
    
    def hay_stock(self):
        # Verificar si hay unidades disponibles
        # Escribe aquí tu código
        #mensaje = "disponible" if self.stock else "no disponible"
        return self.stock > 0
        

# Clase Alimento que hereda de Producto
class Alimento(Producto):
    def __init__(self, nombre, precio, stock, fecha_caducidad):
        # Llamar al constructor de la clase padre
        # Escribe aquí tu código
        super().__init__(nombre, precio, stock)
        # Inicializar atributo específico de Alimento
        # Escribe aquí tu código
        self.fecha_caducidad = fecha_caducidad
        
    
    def mostrar_info(self):
        # Sobreescribir el método para incluir fecha de caducidad
        # Escribe aquí tu código (puedes usar super() o reimplementar)
        mensaje = "disponible" if self.stock else "no disponible"
        return f"{self.nombre} cuyo precio es {self.precio} está {mensaje} y su fecha de caducidad es {self.fecha_caducidad}"
        


# Clase Electronico que hereda de Producto
class Electronico(Producto):
    def __init__(self, nombre, precio, stock, garantia):
        # Llamar al constructor de la clase padre
        # Escribe aquí tu código
        super().__init__(nombre, precio, stock)
        # Inicializar atributo específico de Electronico
        # Escribe aquí tu código
        self.garantia = garantia
        
    
    def mostrar_info(self):
        # Sobreescribir el método para incluir información de garantía
        # Escribe aquí tu código (puedes usar super() o reimplementar)
        mensaje = "disponible" if self.stock else "no disponible"
        return f"{self.nombre} cuyo precio es {self.precio} está {mensaje} y su garantia es {self.garantia}"

# === CREACIÓN Y PRUEBA DE INSTANCIAS ===
print("=== CREANDO PRODUCTOS ===")

# Crear una instancia de Producto genérico
# Escribe aquí tu código
producto1 = Producto("arroz", 1.5, 10)

# Crear una instancia de Alimento
# Escribe aquí tu código
alimento1 = Alimento("harina", 1.20, 0, "11-05-2025")


# Crear una instancia de Electronico
# Escribe aquí tu código
electronico1 = Electronico("movil", 150, 20, "23-07-2027")

print("\n=== INFORMACIÓN DE PRODUCTOS ===")

# Mostrar información del producto genérico
# Escribe aquí tu código
print(producto1.mostrar_info())

# Mostrar información del alimento
# Escribe aquí tu código
print(alimento1.mostrar_info())

# Mostrar información del electrónico
# Escribe aquí tu código
print(electronico1.mostrar_info())

print("\n=== VERIFICANDO STOCK ===")

# Verificar stock de cada producto
# Escribe aquí tu código
print(producto1.hay_stock())
print(alimento1.hay_stock())
print(electronico1.hay_stock())

